package actions;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Map;

import com.mysql.jdbc.CallableStatement;
import com.mysql.jdbc.ResultSet;
import com.opensymphony.xwork2.ActionContext;
import com.opensymphony.xwork2.ActionSupport;

import connection.Connect;
import models.hp_giang_day;
import models.sv_hp;

public class GVViewDSSVAction extends ActionSupport {

	private static final long serialVersionUID = 1L;
	private Connect conn;
	private String id_hp;
	private Map<String, Object> session = null;
	private GVAction gvAction = null;
	private ArrayList<sv_hp> dsSVHP = null;

	public GVViewDSSVAction() {
		this.gvAction = new GVAction();
	}
	
	public String getViewDSSVLopHP(){
		if(!gvAction.Prefix_Check("Trang chủ xem danh sách sinh viên trong lớp học phần"))
			return "error";
		// Kiểm tra xem nếu session hknk đã có thì khỏi tạo lại và ngược lại
		this.session = ActionContext.getContext().getSession();
		if (!session.containsKey("hknk")) {
			System.out.println("Gán hknk lần đầu");
			this.gvAction.assignHKNKValues();
		}
		
		this.conn = new Connect();
		String procedure = "call get_tt_gv_day_hp_ds_sv(?);";
		CallableStatement pstmt = null;
		try {
			pstmt = (CallableStatement) this.conn.getConn().prepareCall(procedure);
			// Gán tham số id_hp
			pstmt.setInt(1, Integer.parseInt(getId_hp()));
			
			// Thực thi procedure
			pstmt.execute();
			ResultSet rs = (ResultSet) pstmt.getResultSet();
			int stt = 1;

			// Duyệt kết quả
			this.dsSVHP = new ArrayList<sv_hp>();
			while (rs.next()) {
				// Khi hàng đó không null
				if (!rs.wasNull()) {
					sv_hp sv = new sv_hp();
					sv.setStt(stt++);
					sv.setId_sv(rs.getInt("ID_SV"));
					sv.setMssv(rs.getString("MSSV"));
					sv.setHo_ten(rs.getString("HO_TEN"));
					sv.setDiem_chu(rs.getString("DIEM_CHU"));
					sv.setDiem_10(rs.getFloat("DIEM_10"));
					this.dsSVHP.add(sv);
				}
			}
			// Đóng kết nối
			rs.close();
			this.conn.Close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return "view-dssvlophp";
	}
	
	public void validate() {
		try {
			System.out.println("Kiểm tra các biến!");
			int id_hp_check = Integer.parseInt(id_hp);
			
			if (id_hp_check <= 0) {
				addActionError("Học phần không hợp lệ!");
			}
			
		} catch (Exception ex) {
			System.out.println("Lỗi kiểm tra các biến!");
			addActionError("Học phần không hợp lệ!");
			ex.printStackTrace();
		}
	}
	
	public String getId_hp() {
		return id_hp;
	}
	
	public void setId_hp(String id_hp) {
		this.id_hp = id_hp;
	}
}
